@page "/operation/add"
@inject IJSRuntime JS
@inject ISnackbar Snackbar
@inject OperationRepository _db
@inject NavigationManager Nav
@using System.Globalization

<MudPaper Elevation="5" Outlined="true" Style="padding: 10px;" Width="100%">
    <MudPaper Elevation="5" Outlined="true">
        <MudText Typo="Typo.h4" Align="Align.Center">
            إضافة عملية جديدة
        </MudText>
    </MudPaper>
    <MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Center" StretchItems="StretchItems.All" Spacing="2">
        <FrequentlyUsed 
            Title="العمليات الأكثر تكراراً"  
            T="string"
            @bind-Value="Operation.Title"
            ShowCount="4"
            GetValues="@_db.GetMostFrequentlyUsedOperations"/>
    </MudStack>
    <MudPaper Elevation="5" Outlined="true">
        <EditForm Model="Operation" OnValidSubmit="Submit">
            <DataAnnotationsValidator />
            <MudStack Row="false" Spacing="3" Justify="Justify.Center">
                @* --------------------------------------------------- *@
                <ValidationMessage For="() => Operation.Title" />
                <MudTextField T="string"
                              @bind-Value="Operation.Title"
                              Variant="Variant.Outlined"
                              Placeholder="ادخل اسم العملية"
                              Margin="Margin.Dense" />

                @* --------------------------------------------------- *@
                <ValidationMessage For="() => Operation.Cost" />
                <MudNumericField T="long"
                                 @bind-Value="Operation.Cost"
                                 Label="القيمة المدفوعة"
                                 Step="1000"
                                 Variant="Variant.Outlined"
                                 Margin="Margin.Dense"
                                 Format="#,##0" />
                @* --------------------------------------------------- *@

                <MudElement HtmlTag="div" id="ShowAttachments" Style="margin: 5px; overflow-x: hidden;">
                    <MudStack Row="false" Justify="Justify.FlexStart" AlignItems="AlignItems.Stretch" Spacing="3">
                        <MudTextField T="string"
                                      @bind-Value="Operation.Description"
                                      For="() => Operation.Description"
                                      Placeholder="[اختياري] ادخل تفاصيل"
                                      Lines="5"
                                      Variant="Variant.Outlined" />

                        <MudElement HtmlTag="div" Style="margin: 0 5px;">
                            <MudDatePicker 
                                           Label="تاريخ العملية"
                                           OpenTo="OpenTo.Date"
                                           AdornmentColor="Color.Secondary"
                                           @bind-Date="Date"
                                           PickerVariant="PickerVariant.Dialog"
                                           Color="Color.Primary"
                                           Rounded="true"
                                           Disabled="@(!OldOperation)"
                                           Variant="Variant.Outlined"/>

                            <MudSwitch @bind-Value="OldOperation" Label="تسجيل عملية قديمة" Color="Color.Success" UncheckedColor="Color.Error" />
                        </MudElement>
                    </MudStack>
                </MudElement>
                @* --------------------------------------------------- *@


                <MudItem Style="align-self: center;">
                    <MudIconButton Color="Color.Surface"
                                   Icon="@(ShowAttachments ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)"
                                   OnClick="Show" Size="Size.Small" />
                </MudItem>
                <MudButton Style="margin: 5px;" Color="Color.Success" Variant="Variant.Filled" ButtonType="ButtonType.Submit">حفظ</MudButton>
            </MudStack>
        </EditForm>
    </MudPaper>
</MudPaper>

<script>
    function Test() {
        document.getElementById("ShowAttachments").classList.toggle("Show");
    }
</script>

@code {
    [SupplyParameterFromForm]
    public Operation Operation { get; set; } = new();

    public bool ShowAttachments { get; set; } = false;

    public DateTime? Date { get; set; }

    private bool _OldOperation = false;

    public bool OldOperation { get { return _OldOperation; } set { _OldOperation = value; if (!value) { Date = Operation.Date; } } }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Date = Operation.Date;
        }
        base.OnAfterRender(firstRender);
    }

    public async Task Show()
    {
        await JS.InvokeVoidAsync("Test");
        ShowAttachments = !ShowAttachments;

        await Task.Delay(200).ContinueWith(_ => 
        {
            if (ApplicationSettings.ResetContentAfterClosing)
            {
                Operation.Description = null;
                Date = Operation.Date;
                OldOperation = false;
            }
        });
    }


    public async Task Submit()
    {
        var oldDate = Operation.Date;
        Operation.Date = Date!.Value;
        bool IsSuccessFul = (await _db.SaveAsync(Operation)) > 0;
        if (IsSuccessFul)
        {
            Snackbar.Add($"تم إضافة العملية بنجاح\n{Operation.Date}", Severity.Success);
            if (ApplicationSettings.RedirectToHomeAfterSuccessfullyAddingANewOperation)
                Nav.NavigateTo("/");
        }
        else
        {
            Operation.Date = oldDate;
            Snackbar.Add("فشلت عملية الإضافة", Severity.Error);
        }
    }
}
